basePath: :8080/v1
definitions:
  database.Post:
    properties:
      content:
        type: string
      createdAt:
        type: string
      feedID:
        type: string
      id:
        type: string
      publishedAt:
        type: string
      summary:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  database.User:
    properties:
      apiKey:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost
info:
  contact:
    name: Ivan
    url: https://github.com/divakaivan
  description: This is a basic server for RSS Aggregation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: RSS Aggregator API
  version: "1.0"
paths:
  /err:
    get:
      description: Something went wrong
      produces:
      - application/json
      responses: {}
      summary: Something went wrong
      tags:
      - err
  /feed_follows:
    get:
      consumes:
      - application/json
      description: Get all feed follows. Requires authentication.
      produces:
      - application/json
      responses:
        "200":
          description: '[]database.FeedFollow'
        "400":
          description: ErrorResponse
      security:
      - ApiKeyAuth: []
      summary: Get all feed follows
      tags:
      - feed_follows
    post:
      consumes:
      - application/json
      description: Create a new feed follow. Requires authentication.
      parameters:
      - description: Feed ID
        in: body
        name: feed_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: FeedFollow
        "400":
          description: ErrorResponse
      security:
      - ApiKeyAuth: []
      summary: Create a new feed follow
      tags:
      - feed_follows
  /feed_follows/{feedFollowID}:
    delete:
      consumes:
      - application/json
      description: Delete a feed follow. Requires authentication.
      parameters:
      - description: Feed Follow ID
        in: path
        name: feedFollowID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: struct{}
        "400":
          description: ErrorResponse
      security:
      - ApiKeyAuth: []
      summary: Delete a feed follow
      tags:
      - feed_follows
  /feeds:
    get:
      consumes:
      - application/json
      description: Get all feeds
      produces:
      - application/json
      responses:
        "200":
          description: '[]Feed'
        "400":
          description: ErrorResponse
      security:
      - ApiKeyAuth: []
      summary: Get all feeds
      tags:
      - feeds
    post:
      consumes:
      - application/json
      description: Create a new feed. Requires authentication.
      parameters:
      - description: Name of the feed
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: URL of the feed
        in: body
        name: url
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Feed
        "400":
          description: ErrorResponse
      security:
      - ApiKeyAuth: []
      summary: Create a new feed
      tags:
      - feeds
  /healthz:
    get:
      description: Check if the service is healthy
      produces:
      - application/json
      responses: {}
      summary: Check if the service is healthy
      tags:
      - healthz
  /posts:
    get:
      consumes:
      - application/json
      description: Get posts for a user with pagination
      parameters:
      - description: Limit of posts to return
        in: query
        name: limit
        type: integer
      - description: Offset of posts to return
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Post'
            type: array
        "500":
          description: '{object}" "error'
      summary: Get posts for a user with pagination
      tags:
      - posts
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Name of the user
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.User'
        "400":
          description: '{object}" "error'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by ID. Requires authentication.
      parameters:
      - description: ID of the user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User
        "404":
          description: error
      summary: Get a user by ID
      tags:
      - users
swagger: "2.0"
